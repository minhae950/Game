[
    {
        "label": "*",
        "importPath": "ursina",
        "description": "ursina",
        "isExtraImport": true,
        "detail": "ursina",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "ursina",
        "description": "ursina",
        "isExtraImport": true,
        "detail": "ursina",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "ursina",
        "description": "ursina",
        "isExtraImport": true,
        "detail": "ursina",
        "documentation": {}
    },
    {
        "label": "FirstPersonController",
        "importPath": "ursina.prefabs.first_person_controller",
        "description": "ursina.prefabs.first_person_controller",
        "isExtraImport": true,
        "detail": "ursina.prefabs.first_person_controller",
        "documentation": {}
    },
    {
        "label": "FirstPersonController",
        "importPath": "ursina.prefabs.first_person_controller",
        "description": "ursina.prefabs.first_person_controller",
        "isExtraImport": true,
        "detail": "ursina.prefabs.first_person_controller",
        "documentation": {}
    },
    {
        "label": "update",
        "kind": 2,
        "importPath": "quterview",
        "description": "quterview",
        "peekOfCode": "def update():\n    global model_visible\n    # 스페이스 키를 눌러서 모델 숨기기 또는 보이기\n    if held_keys['space']:\n        if model_visible:\n            model_entity.visible = False\n        else:\n            model_entity.visible = True\n        model_visible = not model_visible  # 상태 반전\napp.run()",
        "detail": "quterview",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "quterview",
        "description": "quterview",
        "peekOfCode": "app = Ursina()\nplayer = FirstPersonController()\n# 3D 모델 엔티티 생성\nmodel_path = 'man.obj'  # 모델 파일의 경로를 지정합니다.\nmodel_entity = Entity(model=model_path, scale=(1, 1, 1), color=color.orange)\nmodel_entity.rotation = ()\n# 모델의 가시성을 제어할 변수\nmodel_visible = True\ndef update():\n    global model_visible",
        "detail": "quterview",
        "documentation": {}
    },
    {
        "label": "player",
        "kind": 5,
        "importPath": "quterview",
        "description": "quterview",
        "peekOfCode": "player = FirstPersonController()\n# 3D 모델 엔티티 생성\nmodel_path = 'man.obj'  # 모델 파일의 경로를 지정합니다.\nmodel_entity = Entity(model=model_path, scale=(1, 1, 1), color=color.orange)\nmodel_entity.rotation = ()\n# 모델의 가시성을 제어할 변수\nmodel_visible = True\ndef update():\n    global model_visible\n    # 스페이스 키를 눌러서 모델 숨기기 또는 보이기",
        "detail": "quterview",
        "documentation": {}
    },
    {
        "label": "model_path",
        "kind": 5,
        "importPath": "quterview",
        "description": "quterview",
        "peekOfCode": "model_path = 'man.obj'  # 모델 파일의 경로를 지정합니다.\nmodel_entity = Entity(model=model_path, scale=(1, 1, 1), color=color.orange)\nmodel_entity.rotation = ()\n# 모델의 가시성을 제어할 변수\nmodel_visible = True\ndef update():\n    global model_visible\n    # 스페이스 키를 눌러서 모델 숨기기 또는 보이기\n    if held_keys['space']:\n        if model_visible:",
        "detail": "quterview",
        "documentation": {}
    },
    {
        "label": "model_entity",
        "kind": 5,
        "importPath": "quterview",
        "description": "quterview",
        "peekOfCode": "model_entity = Entity(model=model_path, scale=(1, 1, 1), color=color.orange)\nmodel_entity.rotation = ()\n# 모델의 가시성을 제어할 변수\nmodel_visible = True\ndef update():\n    global model_visible\n    # 스페이스 키를 눌러서 모델 숨기기 또는 보이기\n    if held_keys['space']:\n        if model_visible:\n            model_entity.visible = False",
        "detail": "quterview",
        "documentation": {}
    },
    {
        "label": "model_entity.rotation",
        "kind": 5,
        "importPath": "quterview",
        "description": "quterview",
        "peekOfCode": "model_entity.rotation = ()\n# 모델의 가시성을 제어할 변수\nmodel_visible = True\ndef update():\n    global model_visible\n    # 스페이스 키를 눌러서 모델 숨기기 또는 보이기\n    if held_keys['space']:\n        if model_visible:\n            model_entity.visible = False\n        else:",
        "detail": "quterview",
        "documentation": {}
    },
    {
        "label": "model_visible",
        "kind": 5,
        "importPath": "quterview",
        "description": "quterview",
        "peekOfCode": "model_visible = True\ndef update():\n    global model_visible\n    # 스페이스 키를 눌러서 모델 숨기기 또는 보이기\n    if held_keys['space']:\n        if model_visible:\n            model_entity.visible = False\n        else:\n            model_entity.visible = True\n        model_visible = not model_visible  # 상태 반전",
        "detail": "quterview",
        "documentation": {}
    },
    {
        "label": "start_game",
        "kind": 2,
        "importPath": "UI_test",
        "description": "UI_test",
        "peekOfCode": "def start_game():\n    title.text = \"Game Started!\"\ndef exit_game():\n    application.quit()\nstart_button.on_click = start_game\nexit_button.on_click = exit_game\napp.run()\napp.run()",
        "detail": "UI_test",
        "documentation": {}
    },
    {
        "label": "exit_game",
        "kind": 2,
        "importPath": "UI_test",
        "description": "UI_test",
        "peekOfCode": "def exit_game():\n    application.quit()\nstart_button.on_click = start_game\nexit_button.on_click = exit_game\napp.run()\napp.run()",
        "detail": "UI_test",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "UI_test",
        "description": "UI_test",
        "peekOfCode": "app = Ursina()\n# 텍스트와 버튼 생성\ntitle = Text(text='Game Menu', position=(0, 0.3), scale=2, color=color.orange)\nstart_button = Button(text='Start', color=color.azure, scale=(0.3, 0.1), position=(0, 0.1))\nexit_button = Button(text='Exit', color=color.red, scale=(0.3, 0.1), position=(0, -0.1))\n# 버튼 클릭 시 동작 설정\ndef start_game():\n    title.text = \"Game Started!\"\ndef exit_game():\n    application.quit()",
        "detail": "UI_test",
        "documentation": {}
    },
    {
        "label": "title",
        "kind": 5,
        "importPath": "UI_test",
        "description": "UI_test",
        "peekOfCode": "title = Text(text='Game Menu', position=(0, 0.3), scale=2, color=color.orange)\nstart_button = Button(text='Start', color=color.azure, scale=(0.3, 0.1), position=(0, 0.1))\nexit_button = Button(text='Exit', color=color.red, scale=(0.3, 0.1), position=(0, -0.1))\n# 버튼 클릭 시 동작 설정\ndef start_game():\n    title.text = \"Game Started!\"\ndef exit_game():\n    application.quit()\nstart_button.on_click = start_game\nexit_button.on_click = exit_game",
        "detail": "UI_test",
        "documentation": {}
    },
    {
        "label": "start_button",
        "kind": 5,
        "importPath": "UI_test",
        "description": "UI_test",
        "peekOfCode": "start_button = Button(text='Start', color=color.azure, scale=(0.3, 0.1), position=(0, 0.1))\nexit_button = Button(text='Exit', color=color.red, scale=(0.3, 0.1), position=(0, -0.1))\n# 버튼 클릭 시 동작 설정\ndef start_game():\n    title.text = \"Game Started!\"\ndef exit_game():\n    application.quit()\nstart_button.on_click = start_game\nexit_button.on_click = exit_game\napp.run()",
        "detail": "UI_test",
        "documentation": {}
    },
    {
        "label": "exit_button",
        "kind": 5,
        "importPath": "UI_test",
        "description": "UI_test",
        "peekOfCode": "exit_button = Button(text='Exit', color=color.red, scale=(0.3, 0.1), position=(0, -0.1))\n# 버튼 클릭 시 동작 설정\ndef start_game():\n    title.text = \"Game Started!\"\ndef exit_game():\n    application.quit()\nstart_button.on_click = start_game\nexit_button.on_click = exit_game\napp.run()\napp.run()",
        "detail": "UI_test",
        "documentation": {}
    },
    {
        "label": "start_button.on_click",
        "kind": 5,
        "importPath": "UI_test",
        "description": "UI_test",
        "peekOfCode": "start_button.on_click = start_game\nexit_button.on_click = exit_game\napp.run()\napp.run()",
        "detail": "UI_test",
        "documentation": {}
    },
    {
        "label": "exit_button.on_click",
        "kind": 5,
        "importPath": "UI_test",
        "description": "UI_test",
        "peekOfCode": "exit_button.on_click = exit_game\napp.run()\napp.run()",
        "detail": "UI_test",
        "documentation": {}
    },
    {
        "label": "input",
        "kind": 2,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "def input(key):\n    global hand_visable\n    #print(key) #for check\n    if key == 'left shift':\n        player.speed = 10\n    if key == 'left shift up': \n        player.speed = 5\n    if key == '1':\n        if hand_visable == False:\n            hand.visible = True",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "quit_game",
        "kind": 2,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "def quit_game():\n    application.quit()\ncrosshair.parent = camera.ui\napp.run()",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "app = Ursina()\n#model import\nmodel_path = 'man.obj'\nGrid_texture = load_texture('Texture.jpg')\n#map\nground = Entity(model='plane', scale=(50, 1, 50), texture=Grid_texture, collider='box')\nmodel_entity = Entity(model=model_path, scale=(0.4, 0.4, 0.4), color=color.orange, rotation=(-90, 0, 90), position=(0, 0, 0))\n#fucking player settings\nplayer = FirstPersonController()\ncrosshair = Entity(model='circle', color=color.red, scale=(0.003, 0.003), position=(0, 0, 0))",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "model_path",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "model_path = 'man.obj'\nGrid_texture = load_texture('Texture.jpg')\n#map\nground = Entity(model='plane', scale=(50, 1, 50), texture=Grid_texture, collider='box')\nmodel_entity = Entity(model=model_path, scale=(0.4, 0.4, 0.4), color=color.orange, rotation=(-90, 0, 90), position=(0, 0, 0))\n#fucking player settings\nplayer = FirstPersonController()\ncrosshair = Entity(model='circle', color=color.red, scale=(0.003, 0.003), position=(0, 0, 0))\ncamera.fov = 100\n# cube = Entity(model='cube', color=color.white, scale=(2, 2, 2), position=(0, 1, 5), collider='box')",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "Grid_texture",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "Grid_texture = load_texture('Texture.jpg')\n#map\nground = Entity(model='plane', scale=(50, 1, 50), texture=Grid_texture, collider='box')\nmodel_entity = Entity(model=model_path, scale=(0.4, 0.4, 0.4), color=color.orange, rotation=(-90, 0, 90), position=(0, 0, 0))\n#fucking player settings\nplayer = FirstPersonController()\ncrosshair = Entity(model='circle', color=color.red, scale=(0.003, 0.003), position=(0, 0, 0))\ncamera.fov = 100\n# cube = Entity(model='cube', color=color.white, scale=(2, 2, 2), position=(0, 1, 5), collider='box')\n#UI",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "ground",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "ground = Entity(model='plane', scale=(50, 1, 50), texture=Grid_texture, collider='box')\nmodel_entity = Entity(model=model_path, scale=(0.4, 0.4, 0.4), color=color.orange, rotation=(-90, 0, 90), position=(0, 0, 0))\n#fucking player settings\nplayer = FirstPersonController()\ncrosshair = Entity(model='circle', color=color.red, scale=(0.003, 0.003), position=(0, 0, 0))\ncamera.fov = 100\n# cube = Entity(model='cube', color=color.white, scale=(2, 2, 2), position=(0, 1, 5), collider='box')\n#UI\nhand = Entity(parent=camera, model='cube', scale=(0.13, 0.15, 0.13), color=color.rgb(150, 75, 0))\nhand.position = Vec3(0.5, -0.3, 0.5)  # 화면 우측 하단에 위치시키기",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "model_entity",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "model_entity = Entity(model=model_path, scale=(0.4, 0.4, 0.4), color=color.orange, rotation=(-90, 0, 90), position=(0, 0, 0))\n#fucking player settings\nplayer = FirstPersonController()\ncrosshair = Entity(model='circle', color=color.red, scale=(0.003, 0.003), position=(0, 0, 0))\ncamera.fov = 100\n# cube = Entity(model='cube', color=color.white, scale=(2, 2, 2), position=(0, 1, 5), collider='box')\n#UI\nhand = Entity(parent=camera, model='cube', scale=(0.13, 0.15, 0.13), color=color.rgb(150, 75, 0))\nhand.position = Vec3(0.5, -0.3, 0.5)  # 화면 우측 하단에 위치시키기\nhand.rotation = Vec3(0, 90, 0)  # 손 모양을 약간 회전",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "player",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "player = FirstPersonController()\ncrosshair = Entity(model='circle', color=color.red, scale=(0.003, 0.003), position=(0, 0, 0))\ncamera.fov = 100\n# cube = Entity(model='cube', color=color.white, scale=(2, 2, 2), position=(0, 1, 5), collider='box')\n#UI\nhand = Entity(parent=camera, model='cube', scale=(0.13, 0.15, 0.13), color=color.rgb(150, 75, 0))\nhand.position = Vec3(0.5, -0.3, 0.5)  # 화면 우측 하단에 위치시키기\nhand.rotation = Vec3(0, 90, 0)  # 손 모양을 약간 회전\n#blogal variables\nhand_visable = False",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "crosshair",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "crosshair = Entity(model='circle', color=color.red, scale=(0.003, 0.003), position=(0, 0, 0))\ncamera.fov = 100\n# cube = Entity(model='cube', color=color.white, scale=(2, 2, 2), position=(0, 1, 5), collider='box')\n#UI\nhand = Entity(parent=camera, model='cube', scale=(0.13, 0.15, 0.13), color=color.rgb(150, 75, 0))\nhand.position = Vec3(0.5, -0.3, 0.5)  # 화면 우측 하단에 위치시키기\nhand.rotation = Vec3(0, 90, 0)  # 손 모양을 약간 회전\n#blogal variables\nhand_visable = False\nhand.visible = False ",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "camera.fov",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "camera.fov = 100\n# cube = Entity(model='cube', color=color.white, scale=(2, 2, 2), position=(0, 1, 5), collider='box')\n#UI\nhand = Entity(parent=camera, model='cube', scale=(0.13, 0.15, 0.13), color=color.rgb(150, 75, 0))\nhand.position = Vec3(0.5, -0.3, 0.5)  # 화면 우측 하단에 위치시키기\nhand.rotation = Vec3(0, 90, 0)  # 손 모양을 약간 회전\n#blogal variables\nhand_visable = False\nhand.visible = False \nweapon_state = 'none'",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "hand",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "hand = Entity(parent=camera, model='cube', scale=(0.13, 0.15, 0.13), color=color.rgb(150, 75, 0))\nhand.position = Vec3(0.5, -0.3, 0.5)  # 화면 우측 하단에 위치시키기\nhand.rotation = Vec3(0, 90, 0)  # 손 모양을 약간 회전\n#blogal variables\nhand_visable = False\nhand.visible = False \nweapon_state = 'none'\ndef input(key):\n    global hand_visable\n    #print(key) #for check",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "hand.position",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "hand.position = Vec3(0.5, -0.3, 0.5)  # 화면 우측 하단에 위치시키기\nhand.rotation = Vec3(0, 90, 0)  # 손 모양을 약간 회전\n#blogal variables\nhand_visable = False\nhand.visible = False \nweapon_state = 'none'\ndef input(key):\n    global hand_visable\n    #print(key) #for check\n    if key == 'left shift':",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "hand.rotation",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "hand.rotation = Vec3(0, 90, 0)  # 손 모양을 약간 회전\n#blogal variables\nhand_visable = False\nhand.visible = False \nweapon_state = 'none'\ndef input(key):\n    global hand_visable\n    #print(key) #for check\n    if key == 'left shift':\n        player.speed = 10",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "hand_visable",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "hand_visable = False\nhand.visible = False \nweapon_state = 'none'\ndef input(key):\n    global hand_visable\n    #print(key) #for check\n    if key == 'left shift':\n        player.speed = 10\n    if key == 'left shift up': \n        player.speed = 5",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "hand.visible",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "hand.visible = False \nweapon_state = 'none'\ndef input(key):\n    global hand_visable\n    #print(key) #for check\n    if key == 'left shift':\n        player.speed = 10\n    if key == 'left shift up': \n        player.speed = 5\n    if key == '1':",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "weapon_state",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "weapon_state = 'none'\ndef input(key):\n    global hand_visable\n    #print(key) #for check\n    if key == 'left shift':\n        player.speed = 10\n    if key == 'left shift up': \n        player.speed = 5\n    if key == '1':\n        if hand_visable == False:",
        "detail": "ursina_test",
        "documentation": {}
    },
    {
        "label": "crosshair.parent",
        "kind": 5,
        "importPath": "ursina_test",
        "description": "ursina_test",
        "peekOfCode": "crosshair.parent = camera.ui\napp.run()",
        "detail": "ursina_test",
        "documentation": {}
    }
]